#!/usr/bin/env node

(async () => {
    const { join } = require("path");
    const verify = require("..");

    const projectDir = process.env.INIT_CWD || process.cwd();

    const config = loadConfig();
    const releaseConfig = loadReleaseConfig();

    const { webpackVersion: version, webpackPath: path } = config;
    if (version || path) {
        await verify.installNsWebpack({ version, path });
        await verify.addHelperScripts();
    }

    const { updateWebpack } = config;
    if (updateWebpack) {
        const options = Object.keys(updateWebpack)
            .filter(o => updateWebpack[o]);

        await verify.update(options);
    }

    const { build: buildConfigurations } = config;
    for (configuration of buildConfigurations) {
        console.log(configuration)
        await verify.build(configuration, releaseConfig);
        const { outputSizes } = configuration;
        if (outputSizes) {
            const verification = await verify.verifyAssets(outputSizes);
            if (!verification) {
                console.log("VERIFICATION FAILED!");
            }
        }
    }

    function loadConfig() {
        const configPath =  process.env.npm_config_path;
        if (!configPath) {
            console.error("You must specify configuration file path!");
            process.exit(1);
        }
        const config = loadJson(configPath);

        return config;
    }

    function loadReleaseConfig() {
        const releaseConfig = {
            android: "--release",
            ios: "--release"
        };

        const releaseConfigPath = process.env.npm_config_release_config || config.releaseConfig;
        if (releaseConfigPath) {
            const loadedConfig = loadJson(releaseConfigPath);
            const overrideDefaults = key => releaseConfig[key] = loadedConfig[key];
            Object.keys(loadedConfig).forEach(overrideDefaults)
        }

        return releaseConfig;
    }

    function loadJson(path) {
        const fullPath = path.startsWith(".") ? join(projectDir, path) : path;
        const file = require(fullPath);

        return file;
    }
})();

